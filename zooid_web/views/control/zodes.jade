include index
block content
  script(src="/js/HighCharts.js")
  script(src="/js/drilldown.js")
  

    //- include ../visualization/cluster_map


  .container
    br
    .row
      .col-md-4
        #zodesNodes
      .col-md-8
        .panel.panel-default
          .panel-body
            h5 Network 
            hr
            include ../visualization/cluster_map
        
        .panel.panel-default
          .panel-body
            h5 Performance 
            hr
            include ../visualization/cluster_pie

    

            //- table.table.table-striped#zodesNodes.compact
              thead
                tr
                  th Zode module
                  th Status
                  th IP
                  th Actions
                  th Timing (ms)
                  th Status
                  th On / Off
                  //- th takes
                  //- th gives
              tbody




  script.

      // make new instance of Model
      var zodeModel = new $.eventModel();
      


      // ***** table everything

      // Listen for when things of this model type are created
      zodeModel.on('created', function(info,activity) {
        var ip = (activity.data.ip).replace(/\.|\:/g,'');
        console.log(ip)
        if($("#zodesNodes "+ "#"+ip+"_container").length == 0){

          $("#zodesNodes").append($("<div/>",{
            class:"panel panel-default well-sm", 
            id:ip+"_block"
          }))

          $("#zodesNodes #"+ip+"_block").append($("<div/>",{
            class:" ", 
            id:ip+"_container"
          }))

          $("#zodesNodes #"+ip+"_container").append($("<div/>",{
            class:"", 
            id:ip+"_heading"
          }))

          $("#zodesNodes #"+ip+"_heading").append($("<div/>",{
            class:"panel-heading", 
            html:"<b>"+activity.data.ip+"</b>"

          }))

          $("#zodesNodes #"+ip+"_container").append($("<div/>",{
            class:"panel-body container-fluid  ", 
            id:ip+"_body",
            style:"max-height:220px;overflow:scroll;",


          }))

          $("#zodesNodes #"+ip+"_body").append($("<table>",{
            class:"table table-condensed table-striped", 
            id:ip+"_body",
            style:"font-size:12px;"
          }))



        }


        $("#zodesNodes "+ "#"+ip+"_body.table")
          .append(


            $("<tr />",{
              class:"",
              id:'ip'
            }),

            $("<td />",{
              class:"",
              id:'name',
              html:"<o>"+activity.data.name+"</o>"
            }),

            $("<td />",{
              class:"",
              id:'status',
              html:$("<a>", {href:"/zode/toggle/"+activity.data.id, text:activity.data.status })
            })
            //- $("<td />",{
            //-   class:"",
            //-   id:'actions',
            //-   text:activity.data.actions
            //- }),
            //- $("<td />",{
            //-   class:"",
            //-   id:'work',
            //-   text:activity.data.work
            //- }),
            //- $("<td />",{
            //-   class:"",
            //-   id:'status',
            //-   text:activity.data.status
            //- }),
            //- $("<td />",{
            //-   class:"",
            //-   id:'toggle',
            //-   html:"<i class='fa fa-fw fa-lg ion ion-ios7-checkmark-outline'></i>"
            //- })

            //- $("<td>",{
            //-   id:'takes',
            //-   text:activity.data.takes
            //- }),
            //- $("<td>",{
            //-   id:'gives',
            //-   text:activity.data.gives
            //- })

          )
          

      });


      // Listen for when things of this model type are updated
      zodeModel.on('updated', function(info,activity) {
        console.log(activity)
        $.map(activity.data, function(val, key){
        console.log(val,":",key)

          if($("#"+activity.id+" #"+key).text())
            if($("#"+activity.id+" #"+key).text() != val)
            $("#"+activity.id+" #"+key).text(val)
          //- else $("#"+activity.id).append($("<div>",{id:key,text:val}))
        })
      });


      // bind dom to model with sockets
      function dom_glue(model){

        io.socket.on( model, function(activity){
            zodeModel.emit(activity.verb, activity);
        })

        io.socket.get( "/"+model, {}, function(activities){

          $.map(activities, function(activity){
            console.log(activity)
            zodeModel.emit('created', {
              id:activity.id,
              data:activity
            })

          })
        //- $("#zodesNodes").DataTable({"lengthMenu": [ 10,25,50,100,500 ]});
        })

      }

      // When document is ready, grab latest things.
      $(document).ready(function(){

        dom_glue("zode");


        /**
         * Tests the cluster, broadcasts "test" to all the zodes from the
         * controller and paints responses through normal socket flow.
         * @param  {[type]}  error
         * @return {[type]}   [description]
         */
        
        $(document).on('click', '.test_cluster', function(error){
          io.socket.post("/signal/test", {});
        })

      })





page
