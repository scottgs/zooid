extends ../layout
block body
   include nav
   


   //- .newSignalForm
   //-   form.form(action="signal/upload").container-fluid
   //-     //- .small.text-muted Name
   //-     input.input-sm.form-control#a(name='name', placeholder='name', value="UI TEST" type='text')
   //-     //- .small.text-muted Service
   //-     input.input-sm.form-control#c(name='service', placeholder='service', value="IMAGE" type='text')
   //-     //- .small.text-muted Type
   //-     input.input-sm.form-control#d(name='type', placeholder='Type', value="HEAD" type='text')
   //-     //- .small.text-muted Location
   //-     input.input-sm.form-control#e(name='path', placeholder='location', value="/cgi/home/bakerbp/zooid/web/.tmp/public/files/" type='text')
   //-     //- .small.text-muted filename
   //-     input.input-sm.form-control#f(name='filename', placeholder='filename', value="diverse.jpg" type='text')
   //-     //- .small.text-muted Data
   //-     input.input-sm.form-control#b(name='data', placeholder='data', value="data" type='text')
   //-     //- .small.text-muted 
   //-       br
   //-     input.button-sm.form-control#b(type='submit', value='Create')












   //- script.
         
   //- (function (io) {
     


   //-   socket = io.connect();

   //-   /**
   //-    * DOM UTILITIES
   //-    * Wrap objects into DOM coherent structures
   //-    * @param  {String} text 
   //-    * @return {html}      
   //-    */

   //-   function img(link){
   //-     // TODO popover
   //-     return "<img src='/files/"+link+"' class='img-responsive '/>"
   //-   }
   //-   function web_img(link){
   //-     // TODO popover
   //-     return "<img src='"+link+"' class='img-responsive'/>"
   //-   }
   //-   function text(text){
   //-     return "<p class='signalText'>"+text+"</p>"
   //-   }
   //-   function icon(name){
   //-     return " <i class='icon ion-"+name+" '></i> "
   //-   }
   //-   function cell(a, id) {
   //-     return "<td class='"+id+"'>"+a+"</td>"
   //-   }
   //-   function head(a){
   //-     return "<th>"+a+"</th>"
   //-   }
   //-   function link(a, href, classes){
   //-     return "<a href='"+ href +"' class=' "+classes+" '>"+a+"</a>"
   //-   }
   //-   function confirmButton(id){
   //-     return "<a id='"+ id +"'>"+icon("ios7-plus-outline fa-lg text-danger")+"</a>";
   //-   }
   //-   function rejectButton(id){
   //-     return "<a id='"+ id +"'>"+icon("ios7-minus-outline fa-lg text-success")+"</a>";
   //-   }

   //-   function question(questions){
   //-     var content = "<span class='  '>"
   //-     for(var i=0;i<questions.length;i++){
   //-       content +="<input class=' input ' type='"
   //-       + (questions[i].type || "text") 
   //-       + "' placeholder='"
   //-       + questions[i].question
   //-       + "' name='"
   //-       + questions[i].response+"'>"
   //-     } return content + "</form>";
   //-   }

   //-   function confirmation(signal){
   //-     var content = "<scootRight>"
   //-     for(var i=0;i<confirmation.length;i++){
   //-       content += confirmButton(signal.id)
   //-       content += rejectButton(signal.id)
   //-       content +=  "</scootRight>"
   //-     }
   //-       content += "</form>"
   //-     return content;
   //-   }

   //-   /**
   //-    * recursively walk and print an object.
   //-    * @param  {Object} item 
   //-    * @return {html}      
   //-    */

   //-   function dump(item, tag1, tag2){ 
   //-     var content = ""; 
   //-     var tag1 = tag1 || "tr"
   //-     var tag2 = tag2 || "td"
   //-       for(i in item){
   //-       content+= "<"+tag1+">"
   //-         if(Object.prototype.toString.call( item[i] ) === '[object Object]')
   //-           content+= dump( item[i], tag1, tag2 )+""
   //-         else
   //-           content+= "<"+tag2+" class='' id ='"+i+"'>"+i+""+item[i]+"</"+tag2+">"
   //-       }
   //-       content+= "<"+tag1+">"
   //-       return content 
   //-     } 


   //-   /**
   //-    * Recursively walk and print a service object
   //-    * @param  {Object} item 
   //-    * @return {html}      
   //-    */

   //-   function createServiceDiv(item){ 
       
   //-       var content = ""
   //-       content+= "<a id = '"+item.id+"' class='button button-sm button-default  getService'>"
   //-       content+= item.name
   //-       content+= "</a>"
   //-       return content
   //-   }

   //-   function announceMap(item){ 
       
   //-       var content = ""
   //-       content+= "<a id = '"+item.id+"' class='button button-sm button-default  getService'>"
   //-       content+= item.name
   //-       content+= "</a>"
   //-       return content
   //-   }


   //-   function createSignalDiv(item_object){

   //-     var item     = item_object
   //-     var filename = item.filename || null
   //-     var classes = (!item.parent_id) ? " signal_HEAD " : " sigStack ";
   //-     var id = item.id || id

   //-     if(item.parent_id){
   //-         //- graph.addLink( id, item.parent_id, "Parent" )
   //-         //- graph.addLink( item.parent_id, id, "Child"  )

   //-       //- if(filename)
   //-         //- graph.addNode( id, filename )

   //-       if(item.text && !(item.text =="" || typeof item.text == 'undefined') ){
   //-         var txt = item.text
   //-         if(item.text){
   //-           //- graph.addNode( item.text, item.text )
   //-           //- graph.addLink( item.text, id, "Parent" )
   //-           //- graph.addLink( item.text, id, "Child" )
   //-           //- graph.addLink( item.text, item.parent_id, "Parent" )
   //-           //- graph.addLink( item.text, item.parent_id, "Child" )
   //-         }
   //-         //- graph.addNode( txt, txt )
   //-         //- graph.addLink( txt, id, "Child" )
   //-         //- graph.addLink( txt, id, "Parent" )
   //-       }

   //-     }
   //-     //- var background = (!item.parent_id) ? {} : {"background":"url(/files/"+ filename +") no-repeat left center "}

   //-     var div = $('<div/>', {

   //-       id: ""+id
   //-       , class: classes
   //-       , title: item.created

   //-       , service: item.name  || item.operation || item.service 
   //-       , "data-content": function(item){ return img(filename, 12) + " " + dump(item) ; }
   //-       , "data-toggle":"popover"
   //-       , "data-placement":"top"
       
   //-     })

   //-     //- .css( background )

   //-     .append(function(){

   //-         var name = item.name 
   //-         var content = ""
   //-         if(name == "new_signal" || name == "New Signal"){ name=null; }
           
   //-         var head_class = (!item.parent_id) ? " head_class " : " sigStack ";

   //-         content+= item.href ? " "+ link( name, item.href)+" " : "";

   //-         content+= "<div id=item'"+item.id+"' class=' signal "+head_class+" '>"
   //-         content+= item.filename ? img(filename) : "";
   //-         content+= item.src ? web_img(item.src) : "";

   //-         content+= name ? icon("ios7-caret-right") + "<span class='signalName'>"+name+"</span> " : "";

   //-         content+= item.text ? text(item.text, item.type) : "";

   //-         content+= item.questions ? question(item.questions) : "";
   //-         content+= item.confirm ? confirmation(item) : "";
   //-         content+= item.listeners ? item.listeners : "";

   //-         //- content+= "<small>"+ item.created +"</small>  "
   //-         content+= item.histogram ? "<pre><small>"
   //-           + JSON.stringify( item.histogram )
   //-           + "</small></pre>":"";
   //-         content+= link(icon("ios7-information-outline fa-lg"), "/signal/"+item.id, " text-right " )
   //-         content+= "</div>"


   //-         return content 
   //-     })
   //-     //- .popover({ 
   //-     //-     trigger: 'click'
   //-     //-   , html:true
   //-     //-   , target:'body'
   //-     //- })
   //-     return div
   //-   };//createSignalDiv






   //- /******************************************************************************
   //-  * Bind Model CRUD events to DOM events
   //-  * 
   //-  * First by model, then by verb.
   //-  * @type {Object} item
   //-  * @return {}
   //- ******************************************************************************/

   //- if(typeof models == 'undefined') 
   //-   models = {}

   //-  models.signal = {
       
   //-     create: function(signal){
       
   //-       var item = signal
   //-       var pend = signal.parent_id ? "appendTo" : "appendTo" 
   //-       var target  = item.parent_id ? "#"+item.parent_id : "#signal_container";

   //-       $(createSignalDiv(item))[pend](target);


   //-       if(item.histogram){
   //-         var u = Math.round( Math.random() *200 );
   //-         $('<div class=" sigStack " date="'+ item.date +'"  ><canvas class="signal" id="chart'+u+item.parent_id
   //-           +'" ></canvas></div>')[pend]( target )
   //-         histogram( item.histogram, u+item.parent_id )
   //-       } 

   //-       if( typeof item.geojson !== "undefined" ){
   //-         createMap(item)
   //-       } 

   //-       //- $(target).children().not(".head_class").sort(function (a, b) {
   //-       //-     return $(a).attr('date') > $(b).attr('date');
   //-       //- }).each(function(){
   //-       //-     var elem = $(this);
   //-       //-     elem.remove();
   //-       //-     $(elem).appendTo(target);
   //-       //- })

   //-     }, //create

   //-     destroy: function(item){
   //-       $("#item"+item.id).fadeOut(0, function(){$(this).remove();});
   //-     }, //destroy

   //-     update: function(item){

   //-       for(var i in item){
   //-         $("#item"+item.id ).find('.'+i).html(item[i]).addClass("animated pulse");
   //-       }
         
   //-       // $("#item"+item.id ).replaceWith(createSignalDiv(item)).addClass("animated pulse")

   //-     } //update

   //-   } //signal



   //- /******************************************************************************
   //-  * Bind DOM events to Model events
   //- ******************************************************************************/


   //-   $(document).ready(function() {


   //-     //- $('#myTab  #connectionsTab').tab('show')

   //-     var dropbox = document.getElementById('fileUpload');

   //-     dropbox.addEventListener('dragenter', noopHandler, false);
   //-     dropbox.addEventListener('dragexit', noopHandler, false);
   //-     dropbox.addEventListener('dragover', noopHandler, false);
   //-     dropbox.addEventListener('drop', drop, false);

   //-     function noopHandler(evt) {
   //-         evt.stopPropagation();
   //-         evt.preventDefault();
   //-     }

   //-     function drop(evt) {
   //-         evt.stopPropagation();
   //-         evt.preventDefault(); 
   //-         var getURL = evt.dataTransfer.getData('Url');
           
   //-         if(getURL) {
   //-           socket.post("/signal/getURL", {getURL:getURL} , function(a,b){
   //-             console.log(getURL,a,b)
   //-           })
   //-         }
   //-     }


   //-     // SIGNAL GENERATOR BUTTON
   //-     $(document).on('click', '.signal-gen', function(e){
   //-       socket.get('/signal/create',
   //-         { service: $(this).attr('method'),
   //-           name: $(this).attr('method') }, 
   //-         function(err, sig){
   //-         console.log(err || 'New Signal:' , 1);
   //-       });
   //-     });

   //-     // SIGNAL ELEMENT
   //-     $(document).on('click', '.signal a', function(e){
   //-       var parent_id = $(e).attr('id')
   //-       socket.get('/signal/find', { parent_id: parent_id }, function(signals){
   //-         console.log("Children:", signals);
   //-         for(signal in signals){
   //-           models["signal"]["create"]( signals[signal] );
   //-         }
   //-       });
   //-     });

   //-     // CREATE SIGNAL BUTTON
   //-     $(document).on('click', '.createSignal', function(e){
   //-       // var f = $("form").submit()
   //-       socket.post("/signal/create", $("form").serializeObject(), function(a,b){console.log(a,b);} )
   //-     })

   //-     // DELETE SIGNAL BUTTON
   //-     $(document).on('click', '.delete', function(e){
   //-       // var f = $("form").submit()
   //-       var id = $(this).id || $(this).parent().id;
   //-       var model = $(this).attr('model-name');
   //-       console.log(id)
   //-       socket.post("/"+model+"/destroy", {id:id}, function(a,b){console.log(a,b);} )
   //-     })
       
   //-     // TEST SIGNAL BUTTON
   //-     $(document).on('click', '.test_cluster', function(e){
   //-       socket.post("/signal/test", {});
   //-     })

   //-     // TEST URL BUTTON
   //-     $(document).on('click', '.test_signal', function(e){
   //-       socket.post("/signal/getURL",{getURL:""}, function(a,b){
   //-         $(".submitURL").append("<i class='fa fa-spinner'></i>")
   //-         })
   //-       //- $(".fa-spinner").hide()
           
   //-     })

   //-     // SUBMIT URL BUTTON
   //-     $(document).on('click', '.submitURL', function(e){
   //-       socket.post("/signal/getURL"
   //-         , $(".getURL").serializeObject()
   //-         , function(a,b){
   //-         $(".submitURL").append("<i class='fa fa-spinner'></i>")
   //-         })
   //-       //- $(".fa-spinner").hide()
           
   //-     })

   //-     // BOUNCE SERVER BUTTON
   //-     $(document).on('click', '.bounce_server', function(e){
   //-       socket.post("/system/bounce", {});
   //-     })

   //-     // GET SERVICE BUTTON
   //-     $(document).on('click', 'a.getService', function(){
   //-       var parent_id = $(this).attr('id');
   //-       console.log(parent_id);
   //-       socket.post("/service/find", { id:parent_id } , function(a,b){
   //-         models.signal.create(a);
   //-       })
   //-     })

   //-     // CODE TAB
   //-     $(document).on('click', '.docs', function(){
   //-       $("#docsTab").tab('show')
   //-     });


   //-     // MAKE IMAGES BIG ON CLICK
   //-     $(document).on('click', '.signal', function(){
   //-       $(this).find("img").toggleClass("bigSignal");
   //-     })

   //-     });



   //-     $(document).ready(function() {

   //-       //- socket.get('/signal/find?type=HEAD&limit=4&sort=date DESC', function(signals){
   //-       //-   for (var i = 0; i < signals.length; i++) {
   //-       //-     models['signal']['create'](signals[i]);

   //-       //-     socket.get('/signal/find/',{parent_id:signals[i].id}, function(ch1s){
   //-       //-       for (var i = 0; i < ch1s.length; i++) {
   //-       //-         models['signal']['create'](ch1s[i]);

   //-       //-         socket.get('/signal/find/',{parent_id:ch1s[i].id}, function(ch2s){
   //-       //-           for (var i = 0; i < ch2s.length; i++) {
   //-       //-             models['signal']['create'](ch2s[i]);

   //-       //-           };
   //-       //-         });
   //-       //-       };
   //-       //-     });
   //-       //-   };
   //-       //- });


   //-       socket.get('/signal', { type:"HEAD", sort:{ "date":"desc"}, limit:3  }, function(signals){
   //-         $.map(signals, function(signal){
   //-           console.log(1,signal)
   //-           models['signal']['create'](signal);

   //-           socket.get('/signal', { parent_id:signal.id }, function(signals2){
   //-             $.map(signals2, function(signal2){
   //-               console.log(2,signal2)
   //-               models['signal']['create'](signal2);

   //-               socket.get('/signal', { parent_id:signal2.id }, function(signals3){
   //-                 $.map(signals3, function(signal3){
   //-                   console.log(3,signal3)
   //-                   models['signal']['create'](signal3);

   //-                 })
   //-               });
                 
   //-             })
   //-           });

   //-         })
   //-       });

   //-       //- socket.get('/service/find', function(services){
   //-       //-   console.log(services)
   //-       //-   for (var i = 0; i < services.length; i++) {
   //-       //-     models['service']['create'](services[i]);
   //-       //-   };
   //-       //- });

   //-       //- socket.get('/system/find', function(system){
   //-       //-   console.log(system)
   //-       //-   for (var i = 0; i < system.length; i++) {
   //-       //-     models['system']['create'](system[i]);
   //-       //-   };
   //-       //- });

   //-   });



   //-     ////////////////////////////////////////////////////////////////////////////////
   //-       /**
   //-        * Create histogram from an image
   //-        * @param  {Object} hist Histogram Data Structure
   //-        * @param  {String} div  Target for paiting chart
   //-        * @return {}
   //-        */
   //-     ////////////////////////////////////////////////////////////////////////////////


   //-     /**
   //-      * Get a few recently processed signals into the DOM
   //-      * @param  {Array} signals Model query response
   //-      * @return {}
   //-      */

   //-      //- socket.get('/signal/find?type=HEAD&limit=1&sort=createdAt DESC', function(signals){
   //-        //- for(signal in signals.reverse()){
   //-          //- models['signal']['create'](signals[signal]);
   //-          //- // socket.request('/signal/find?parent_id='+signals[signal].id, function(signals2){
   //-          //- //   for(signal2 in signals2.reverse()){
   //-          //- //     models['signal']['create'](signals2[signal2]);
   //-          //- //   }
   //-          //- // });
   //-        //- }
   //-      //- });


   //-     function createMap(item) {
        
   //-         var myLocation = item.center || {
   //-           'latitude':  34,
   //-           'longitude': 66,
   //-           'address':   'Afghanistan'
   //-         };
        
   //-         var myLatlng = new google.maps.LatLng( myLocation.latitude, myLocation.longitude );
   //-         var mapOptions = {
   //-           zoom: 6,
   //-           center: myLatlng,
   //-           mapTypeId: google.maps.MapTypeId.HYBRID,
   //-         }

   //-         var map_id=item.parent_id+"_map"

   //-         $("#"+item.parent_id).append("<div id='"+ map_id+"' style='width:320px;height:240px;'></div>")

   //-         var map = new google.maps.Map(document.getElementById(map_id), mapOptions);
        
   //-         var marker = new google.maps.Marker({
   //-             position: myLatlng,
   //-             map: map,
   //-             title: myLocation.address
   //-         });

   //-         map.data.addGeoJson(item.geojson)

   //-       }
        



   //-       //- createMap({parent_id:"signal_container"})

   //-   /**
   //-    * Dispatches socket message to DOM elements
   //-    * @param  {Object} message 
   //-    * @return {}
   //-    */

   //-   function parseMessage(message){

   //-     if(models[message.model] && models[message.model][message.verb]){
   //-       if(!message.data) message.data={} 
   //-       message.data.id = message.id
   //-       models[message.model][message.verb]( message.data || message );

   //-       console.log("Parsed: ", message);
   //-       $(".nodes_count").html( $("#system_container .signal").length -1 )
   //-     } else { console.log("parseMessage(): don't know what to do with the recieved message.") }
   //-   }


   //-   /**
   //-    * Listens to socket
   //-    * @param  {Object} message
   //-    * @return {}
   //-    */

   //-   socket.on('message', function(message){ parseMessage(message); });

   //-   window.socket = socket


   //- })(window.io);

